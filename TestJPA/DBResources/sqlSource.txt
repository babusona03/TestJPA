CREATE TABLE grad_student
(
 gstd_id NUMBER(4) PRIMARY KEY,
 gstd_name VARCHAR2(20) NOT NULL, 
 university_id NUMBER(4), 
 FOREIGN KEY(university_id) REFERENCES university(university_id)
);

CREATE OR REPLACE TRIGGER trg_university_pk BEFORE INSERT ON university 
FOR EACH ROW
BEGIN
SELECT book_db_pk.NEXTVAL 
INTO :NEW.university_id
FROM dual;
END;

CREATE TABLE university
(
  university_id NUMBER(4) PRIMARY KEY,
  university_name VARCHAR2(20) NOT NULL
 );



CREATE TABLE address
(
 addr_id NUMBER(4) PRIMARY KEY,
 addr_name VARCHAR2(20) NOT NULL, 
 emp_id NUMBER(4), 
 FOREIGN KEY(emp_id) REFERENCES employee(emp_id)
);


CREATE TABLE employee
(
  emp_id NUMBER(4) PRIMARY KEY,
  emp_name VARCHAR2(20) NOT NULL
 );
 
 CREATE TABLE book_db (
book_id NUMBER(4),
book_name VARCHAR2(20) NOT NULL,
protagonist_name VARCHAR2(20) NOT NULL,
CONSTRAINT PK_ID PRIMARY KEY(book_id)
);

CREATE SEQUENCE book_db_pk
INCREMENT BY 1
START WITH 0
MINVALUE 0
NOCACHE;	

CREATE OR REPLACE TRIGGER trg_book_db_pk BEFORE INSERT ON book_db 
FOR EACH ROW
BEGIN
SELECT book_db_pk.NEXTVAL 
INTO :NEW.book_id
FROM dual;
END;

INSERT INTO book_db (book_name,protagonist_name) VALUES ('DECEPTION POINT','MICHAEL TOLLAND');


//generated sql
CREATE TABLE CONTACT_DB (ID NUMBER(19) NOT NULL, CONTACT_NAME VARCHAR2(255) NULL, PHONE_NO VARCHAR2(255) NULL, PRIMARY KEY (ID))
CREATE TABLE STUDENT (id NUMBER(10) NOT NULL, stream VARCHAR2(255) NULL, student_name VARCHAR2(255) NULL, PRIMARY KEY (id))
CREATE TABLE EMPLOYEE (EMP_ID NUMBER(10) NOT NULL, EMP_NAME VARCHAR2(255) NULL, PRIMARY KEY (EMP_ID))
CREATE TABLE ADDRESS (ADDR_ID NUMBER(10) NOT NULL, ADDR_NAME VARCHAR2(255) NULL, emp_id NUMBER(10) NULL, PRIMARY KEY (ADDR_ID))
CREATE TABLE BOOK_DB (BOOK_ID NUMBER(10) NOT NULL, BOOK_NAME VARCHAR2(255) NULL, PROTAGONIST_NAME VARCHAR2(255) NULL, PRIMARY KEY (BOOK_ID))
CREATE TABLE grad_student (gstd_id NUMBER(10) NOT NULL, gstd_name VARCHAR2(255) NULL, university_id NUMBER(10) NULL, PRIMARY KEY (gstd_id))
CREATE TABLE university (university_id NUMBER(10) NOT NULL, university_name VARCHAR2(255) NULL, PRIMARY KEY (university_id))
CREATE TABLE PROJECT (PRJ_ID NUMBER(10) NOT NULL, PRJ_NAME VARCHAR2(255) NULL, PRIMARY KEY (PRJ_ID))
CREATE TABLE INSTRUCTOR (INST_ID NUMBER(10) NOT NULL, INST_NAME VARCHAR2(255) NULL, PRIMARY KEY (INST_ID))
CREATE TABLE DEVICE (DEVID NUMBER(10) NOT NULL, DEVNAME VARCHAR2(255) NULL, PRIMARY KEY (DEVID))
CREATE TABLE INS_PRJ_XREF (instructorId NUMBER(10) NOT NULL, projectId NUMBER(10) NOT NULL, PRIMARY KEY (instructorId, projectId))
ALTER TABLE ADDRESS ADD CONSTRAINT FK_ADDRESS_emp_id FOREIGN KEY (emp_id) REFERENCES EMPLOYEE (EMP_ID)
ALTER TABLE grad_student ADD CONSTRAINT FK_grad_student_university_id FOREIGN KEY (university_id) REFERENCES university (university_id)
ALTER TABLE INS_PRJ_XREF ADD CONSTRAINT FK_INS_PRJ_XREF_projectId FOREIGN KEY (projectId) REFERENCES INSTRUCTOR (INST_ID)
ALTER TABLE INS_PRJ_XREF ADD CONSTRAINT FK_INS_PRJ_XREF_instructorId FOREIGN KEY (instructorId) REFERENCES PROJECT (PRJ_ID)
CREATE TABLE SEQUENCE (SEQ_NAME VARCHAR2(50) NOT NULL, SEQ_COUNT NUMBER(38) NULL, PRIMARY KEY (SEQ_NAME))
INSERT INTO SEQUENCE(SEQ_NAME, SEQ_COUNT) values ('SEQ_GEN', 0)
CREATE SEQUENCE BOOK_DB_PK START WITH 1
CREATE SEQUENCE EMP_SEQ INCREMENT BY 50 START WITH 50
CREATE SEQUENCE student_seq START WITH 1
CREATE SEQUENCE contact_seq START WITH 1
CREATE SEQUENCE ADDR_SEQ INCREMENT BY 50 START WITH 50
CREATE SEQUENCE EMP_SEQ INCREMENT BY 50 START WITH 50
CREATE SEQUENCE student_seq START WITH 1
CREATE SEQUENCE ADDR_SEQ INCREMENT BY 50 START WITH 50
CREATE TABLE SEQUENCE (SEQ_NAME VARCHAR2(50) NOT NULL, SEQ_COUNT NUMBER(38) NULL, PRIMARY KEY (SEQ_NAME))
INSERT INTO SEQUENCE(SEQ_NAME, SEQ_COUNT) values ('SEQ_GEN', 0)
CREATE SEQUENCE BOOK_DB_PK START WITH 1
CREATE SEQUENCE contact_seq START WITH 1



CREATE TABLE staff
(
 staff_id NUMBER(4) PRIMARY KEY,
 staff_name VARCHAR2(20) NOT NULL, 
 designation varchar2(20), 
<<<<<<< HEAD
 doj DATE,
 mod_date DATE
);
insert into staff (staff_name,Designation,DOJ) values ('B','B1','11-MAR-2002');
=======
 doj DATE
);

>>>>>>> branch 'master' of https://github.com/babusona03/TestJPA.git

CREATE SEQUENCE staff_pk
INCREMENT BY 1
START WITH 0
MINVALUE 0
NOCACHE;

CREATE OR REPLACE TRIGGER trg_staff_pk BEFORE INSERT ON staff 
FOR EACH ROW
BEGIN
SELECT staff_pk.NEXTVAL 
INTO :NEW.staff_id
FROM dual;
END;
